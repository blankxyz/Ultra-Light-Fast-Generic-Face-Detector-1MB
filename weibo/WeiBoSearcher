# -*- coding:utf-8 _*-
"""
@author:chc
@file: weibo_accountcode_search.py
@time: 2020/3/2
history：
1. 2020/3/2 chc created
"""
import requests
# import run_search_util
import time
from retrying import retry


class weibo_search:
    def __init__(self):
        self.search_url = 'https://m.weibo.cn/api/container/getIndex?containerid=100103type%3D3%26q%3D{}%26t%3D0&page_type=3&page={}'

    def get_proxies(self):
        # 代理服务器
        # 阿布云动态版
        proxyHost = "http-dyn.abuyun.com"
        proxyPort = "9020"
        # 代理隧道验证信息
        proxyUser = "H40C3249595Y905D"
        proxyPass = "43CDFD383F5A23D3"
        proxyMeta = "http://%(user)s:%(pass)s@%(host)s:%(port)s" % {
            "host": proxyHost,
            "port": proxyPort,
            "user": proxyUser,
            "pass": proxyPass,
        }
        proxies = {
            "http": proxyMeta,
            "https": proxyMeta,
        }
        return proxies

    def extract_num(self, num):
        try:
            if not num:
                return 0
            #num = num[0]
            if "万" in num:
                num = int(num.replace("万", "")) * 10000
            elif "亿" in num:
                num = int(num.replace("亿", "")) * 100000000
            else:
                num = int(num)
            return num
        except Exception as e:
            print('修正微博数字出现异常: {}, 异常数据为: {}'.format(e, num))
            return 0

    @retry(stop_max_attempt_number=3, stop_max_delay=1000)
    def get_detial_info(self, id):
        try:
            url = 'https://m.weibo.cn/api/container/getIndex?&t=0&type=uid&containerid=100505{}'.format(id)
            result1 = requests.get(url, proxies=self.get_proxies())
            # 微博
            statuses_count = result1.json()['data']['userInfo']['statuses_count']
            wb_num = self.extract_num(str(statuses_count))
            # 简介
            slogan = result1.json()['data']['userInfo']['description']
            desc1 = result1.json()['data']['userInfo']['verified_reason']
            return statuses_count, wb_num, slogan, desc1
        except:
            print("微博详细信息获取异常 url {}".format(url))
            return 0, 0, '', ''


    def run(self):
        # word = run_search_util.get_keyword_from_db()

        word = ['广东']
        for keyword in word:
            for i in range(1, 1000):
                import random
                # url = self.search_url.format(keyword, i)
                from requests.utils import requote_uri
                stop_time = random.randint(1, 6)
                time.sleep(stop_time)
                keyword = requote_uri(keyword)
                urls = [
                    f'https://m.weibo.cn/api/container/getIndex?containerid=100103type%3D3%26q%3D{keyword}%26t%3D0&page_type=3&page={i}',
                    f'https://m.weibo.cn/api/container/getIndex?containerid=100103type%3D3%26q%3D{keyword}%26t%3D0&title=%E4%B8%AA%E4%BA%BA%E8%AE%A4%E8%AF%81-{keyword}&extparam=q%3D{keyword}%26isv%3D2%26specfilter%3D1%26log_type%3D7%26lfid_type%3D39&luicode=10000011&lfid=100103type%3D39%26q%3D{keyword}%26t%3D0&page={i}',
                    f'https://m.weibo.cn/api/container/getIndex?containerid=100103type%3D3%26q%3D{keyword}%26t%3D0&title=%E6%9C%BA%E6%9E%84%E8%AE%A4%E8%AF%81-{keyword}&extparam=q%3D{keyword}%26isv%3D2%26specfilter%3D1%26log_type%3D7%26lfid_type%3D39&luicode=10000011&lfid=100103type%3D39%26q%3D{keyword}%26t%3D0&page={i}'
                ]
                for url in urls:
                    # url = p_url
                    try:
                        result = requests.get(url, proxies=self.get_proxies())
                        if len(result.json()['data']['cards']) < 1:
                            continue
                        try:
                            users = []
                            for item in result.json()['data']['cards']:
                                if 'card_group' in item.keys():
                                    card_group = item['card_group']
                                    for card in card_group:
                                        users.append(card['user'])
                            save_data(users)
                        except Exception as e:
                            print(e)

                    except:
                        print("weibo requests.get error")

def save_data(users):
    import pymongo
    from pymongo.errors import BulkWriteError

    # uri = "mongodb://root:example@172.17.13.223:27017/?authSource=weibo_db&authMechanism=SCRAM-SHA-256"
    myclient = pymongo.MongoClient("mongodb://172.17.13.223:27017/",
                              username='root',
                              password='example',
                            authSource='admin',
                            authMechanism='SCRAM-SHA-1')
    mydb = myclient["weibo_db"]
    mycol = mydb["users"]
    for user in users:
        # user = card['user']
        user['_id'] = user['id']
    # 这里首先采用批量入库，如果发生异常再采用逐条入库
    try:
        x = mycol.insert_many(users)
    except Exception as e:
        if type(e) == BulkWriteError:
            save_one(users, mycol)
        else:
            print(e)

    return x

def save_one(users, client):
    for user in users:
        try:
            x = client.insert_one(user)
        except Exception as e:
            print(e)

def main():
    WEIBO_SEARCH = weibo_search()
    WEIBO_SEARCH.run()


if __name__ == '__main__':
    main()

